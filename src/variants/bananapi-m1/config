#!/usr/bin/env bash

# make sure to export all the variables to make them available to the chroot scripts as well

# customize the hostname 
#export OVERRIDE_HOSTNAME=blueberrypi

# skip octoprint installation in main build script 
#export OVERRIDE_OCTOPRINT=yes

CONFIG_DIR=$(realpath -s $(dirname $(realpath -s $BASH_SOURCE))/../../)
VARIANT=$(basename $(dirname $(realpath -s $BASH_SOURCE)))
export OCTOPRINT_BRANCH=devel
export OCTOPIPANEL_BRANCH=devel

if [ -f $CONFIG_DIR/config.local ]; then
  source $CONFIG_DIR/config.local
fi

[ -n "$SCRIPT_PATH" ] || export SCRIPT_PATH=$CONFIG_DIR
[ -n "$IMAGE_PATH" ] || export IMAGE_PATH=$SCRIPT_PATH/image-varients
[ -n "$ZIP_IMG" ] || export ZIP_IMG=`ls -t $IMAGE_PATH/*-raspbian-bpi-R1-M1*.zip | head -n 1`
[ -n "$OCTOPI_WORKSPACE" ] || export OCTOPI_WORKSPACE=$SCRIPT_PATH/workspace-${VARIANT}
[ -n "$CHROOT_SCRIPT_PATH" ] || export CHROOT_SCRIPT_PATH=$SCRIPT_PATH/chroot_script
[ -n "$MOUNT_PATH" ] || export MOUNT_PATH=$OCTOPI_WORKSPACE/mount
[ -n "$OVERRIDE_HOSTNAME" ] || export OVERRIDE_HOSTNAME=octopi

echo "================================================================"
echo "Using the following config:"
echo "SCRIPT_PATH = $SCRIPT_PATH"
echo "IMAGE_PATH = $IMAGE_PATH"
echo "ZIP_IMG = $ZIP_IMG"
echo "OCTOPI_WORKSPACE = $OCTOPI_WORKSPACE"
echo "CHROOT_SCRIPT_PATH = $CHROOT_SCRIPT_PATH"
echo "MOUNT_PATH = $MOUNT_PATH"
echo "OVERRIDE_HOSTNAME = $OVERRIDE_HOSTNAME"
echo "================================================================"

