#!/usr/bin/env bash
# OctoPi generation script
# This script takes a Raspbian image and adds to it octoprint and verions addons
# Written by Guy Sheffer <guysoft at gmail dot com>
# GPL V3

source $SCRIPT_PATH/common.sh
install_fail_on_error_trap

function execute_chroot_script() {
  #move OctoPi filesystem files
  cp -vr --preserve=mode,timestamps $1/filesystem .

  #black magic of qemu-arm-static
  cp `which qemu-arm-static` usr/bin
  
  cp $2 chroot_script
  chmod 755 chroot_script
  cp $SCRIPT_PATH/common.sh common.sh
  chmod 755 common.sh
  
  chroot . usr/bin/qemu-arm-static /bin/bash /chroot_script
  
  #cleanup
  rm chroot_script
  rm -rfv filesystem
}

mkdir -p $OCTOPI_WORKSPACE
mkdir -p $MOUNT_PATH

pushd $OCTOPI_WORKSPACE
  if [ -e *.img ]; then  
    rm *.img
  fi
  unzip $ZIP_IMG
  IMG_PATH=`ls | grep .img`

  # mount root and boot partition
  sudo mount -o loop,offset=$((512*122880)) $IMG_PATH $MOUNT_PATH
  sudo mount -o loop,offset=$((512*8192)) $IMG_PATH $MOUNT_PATH/boot

  #Edit pi filesystem
  pushd $MOUNT_PATH

    #make QEMU boot (remember to return)
    fixLd
    #sed -i 's@include /etc/ld.so.conf.d/\*.conf@\#include /etc/ld.so.conf.d/\*.conf@' etc/ld.so.conf
    # if building a variant, execute its pre-chroot script
    if [ -n $VARIANT_BASE ]; then
      execute_chroot_script $VARIANT_BASE $VARIANT_BASE/pre_chroot_script
    fi
 
    # execute the base chroot script
    execute_chroot_script $SCRIPT_PATH $CHROOT_SCRIPT_PATH
    
    # if building a variant, execute its post-chroot script
    if [ -n $VARIANT_BASE ]; then
      execute_chroot_script $VARIANT_BASE $VARIANT_BASE/post_chroot_script
    fi
    
    restoreLd
  popd
  
  # unmount first boot, then root partition
  sudo umount $MOUNT_PATH/boot
  sudo umount $MOUNT_PATH
  chmod 777 $IMG_PATH
popd

